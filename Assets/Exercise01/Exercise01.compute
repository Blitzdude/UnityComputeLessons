// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

#define KERNEL_SIZE 4

float intensity;

#define BLOCK_SIZE 2

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

[numthreads(KERNEL_SIZE, KERNEL_SIZE, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	for (int x = 0; x < BLOCK_SIZE; x++)
	{
		for (int y = 0; y < BLOCK_SIZE; y++)
		{
			uint2 v = uint2(id.x * BLOCK_SIZE + x, id.y * BLOCK_SIZE + y);
			float r = intensity * saturate(v.x & v.y);
			float g = 0;// (id.x & 15)/15.0;
			float b = 0;//(id.y & 15)/15.0;
			float a = 0.0;

			Result[v.xy] = float4(r, g, b, a);
		}
	}
}